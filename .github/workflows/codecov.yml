name: CodeCov workflow

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Test Ruscode and Upload to CodeCov
    steps:
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            coverage
          key: codecov-cargo

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: llvm-tools-preview

      # runs cargo with defaults flags, using the default `lcov` output
      - uses: Swatinem/fucov@v1

      # afterwards, upload the report to codecov
      - uses: codecov/codecov-action@v1
        with:
          directory: coverage

      # # nice reusable workflow to get rust ready
      # - name: Setup rust toolchain
      #   uses: hecrj/setup-rust-action@master
      #   with:
      #     rust-version: stable
      #     components: "clippy, rustfmt"

      # - name: Run cargo test and Collect coverage
      #   env:
      #     RUSTFLAGS: -Cinstrument-coverage
      #     LLVM_PROFILE_FILE: ruscode-%p-%m.profraw
      #   run: |
      #     cargo install grcov
      #     rustup component add llvm-tools-preview
      #     cargo build
      #     cargo test
      #     grcov . --binary-path ./target/debug/ -s . -t html --branch --ignore-not-existing -o ./coverage/

      # - name: Upload coverage reports to Codecov with GitHub Action
      #   uses: codecov/codecov-action@v3
      #   with:
      #     directory: ./coverage/
